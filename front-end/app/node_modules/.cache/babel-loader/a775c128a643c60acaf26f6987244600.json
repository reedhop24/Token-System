{"ast":null,"code":"var _jsxFileName = \"C:\\\\Token-System\\\\front-end\\\\app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport HomeScreen from './components/homeScreen';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.validate = () => {\n      if (this.state.username.length < 10) {\n        return 'Error UserName must be atleast 10 characters';\n      }\n    };\n\n    this.signIn = async () => {\n      const token = await axios.get(`http://localhost:7000/login?username=${this.state.username}&password=${this.state.password}`);\n\n      if (!token.data.auth) {\n        this.setState({\n          error: true,\n          errorMessage: token.data.message\n        });\n        return;\n      }\n\n      sessionStorage.setItem('token', token.data.token);\n      const validateToken = await axios.get('http://localhost:7000/validate', {\n        headers: {\n          'x-access-token': token.data.token\n        }\n      });\n\n      if (validateToken.status === 200) {\n        this.setState({\n          signedIn: true\n        });\n      } else {\n        this.setState({\n          signedIn: false\n        });\n      }\n    };\n\n    this.logout = () => {\n      sessionStorage.removeItem('token');\n      this.setState({\n        signedIn: false,\n        username: null,\n        password: null,\n        errorMessage: null\n      });\n    };\n\n    this.createUser = async () => {\n      const token = await axios.post('http://localhost:7000/newUser', {\n        username: this.state.username,\n        password: this.state.password\n      });\n      sessionStorage.setItem('token', token.data.token);\n      const validateToken = await axios.get('http://localhost:7000/validate', {\n        headers: {\n          'x-access-token': token.data.token\n        }\n      });\n\n      if (validateToken.status === 200) {\n        this.setState({\n          signedIn: true\n        });\n      } else {\n        this.setState({\n          signedIn: false\n        });\n      }\n    };\n\n    this.state = {\n      username: null,\n      password: null,\n      error: null,\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    const token = sessionStorage.getItem('token');\n\n    if (token) {\n      axios.get('http://localhost:7000/validate', {\n        headers: {\n          'x-access-token': token\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            signedIn: true\n          });\n        } else {\n          this.setState({\n            signedIn: false\n          });\n        }\n      });\n    } else {\n      this.setState({\n        signedIn: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, this.state.signedIn === false ? /*#__PURE__*/React.createElement(Login, {\n      errorMessage: this.state.errorMessage,\n      credentials: (x, y) => {\n        this.setState({\n          [x]: y\n        });\n      },\n      getSignIn: () => this.signIn(),\n      createAccount: () => this.createUser(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(HomeScreen, {\n      logout: () => this.logout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Token-System/front-end/app/src/App.js"],"names":["React","Login","HomeScreen","axios","App","Component","constructor","validate","state","username","length","signIn","token","get","password","data","auth","setState","error","errorMessage","message","sessionStorage","setItem","validateToken","headers","status","signedIn","logout","removeItem","createUser","post","componentDidMount","getItem","then","res","render","x","y"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Login from './components/login';\r\nimport HomeScreen from './components/homeScreen';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      error: null,\r\n      errorMessage: null\r\n    }\r\n  }\r\n\r\n  validate = () => {\r\n    if(this.state.username.length < 10) {\r\n      return 'Error UserName must be atleast 10 characters'\r\n    }\r\n  }\r\n\r\n  signIn = async () => {\r\n\r\n    const token = await axios.get(`http://localhost:7000/login?username=${this.state.username}&password=${this.state.password}`);\r\n    if(!token.data.auth) {\r\n      this.setState({error: true, errorMessage: token.data.message});\r\n      return;\r\n    }\r\n\r\n    sessionStorage.setItem('token', token.data.token);\r\n    const validateToken = await axios.get('http://localhost:7000/validate', {\r\n      headers: {\r\n        'x-access-token': token.data.token\r\n      }\r\n    });\r\n\r\n    if(validateToken.status === 200) {\r\n      this.setState({signedIn: true});\r\n    } else {\r\n      this.setState({signedIn: false});\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    sessionStorage.removeItem('token');\r\n    this.setState({\r\n      signedIn: false, \r\n      username: null,\r\n      password: null, \r\n      errorMessage: null\r\n    });\r\n  }\r\n\r\n  createUser = async () => {\r\n    const token = await axios.post('http://localhost:7000/newUser', {username:this.state.username, password:this.state.password});\r\n    sessionStorage.setItem('token', token.data.token);\r\n\r\n    const validateToken = await axios.get('http://localhost:7000/validate', {\r\n      headers: {\r\n        'x-access-token': token.data.token\r\n      }\r\n    });\r\n\r\n    if(validateToken.status === 200) {\r\n      this.setState({signedIn: true});\r\n    } else {\r\n      this.setState({signedIn: false});\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const token = sessionStorage.getItem('token');\r\n    if(token) {\r\n      axios.get('http://localhost:7000/validate', {\r\n        headers: {\r\n          'x-access-token': token\r\n        }\r\n      }).then((res) => {\r\n        if(res.status === 200) {\r\n          this.setState({signedIn: true});\r\n        } else {\r\n          this.setState({signedIn: false});\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({signedIn:false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.signedIn === false ? \r\n        <Login \r\n          errorMessage={this.state.errorMessage} credentials={(x, y) => {this.setState({[x]: y})}} \r\n          getSignIn={() => this.signIn()} createAccount={() => this.createUser()}/> \r\n        : <HomeScreen logout={() => this.logout()}/> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}