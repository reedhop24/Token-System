{"ast":null,"code":"var _jsxFileName = \"C:\\\\token-system\\\\front-end\\\\app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport HomeScreen from './components/homeScreen';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.signIn = async () => {\n      const token = await axios.get(`http://localhost:7000/login?username=${this.state.username}&password=${this.state.password}`);\n\n      if (!token.data.auth) {\n        this.setState({\n          error: true,\n          errorMessage: token.data.auth\n        });\n      } // const validateToken = await axios.get('http://localhost:7000/validate', {\n      //   headers: {\n      //     'x-access-token': token.data.token\n      //   }\n      // });\n      // if(validateToken.status === 200) {\n      //   this.setState({signedIn: true});\n      // }\n\n    };\n\n    this.state = {\n      username: null,\n      password: null,\n      signedIn: false,\n      error: null,\n      errorMessage: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, !this.state.signedIn ? /*#__PURE__*/React.createElement(Login, {\n      credentials: (x, y) => {\n        this.setState({\n          [x]: y\n        });\n      },\n      getSignIn: () => this.signIn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(HomeScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 126\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/token-system/front-end/app/src/App.js"],"names":["React","Login","HomeScreen","axios","App","Component","constructor","signIn","token","get","state","username","password","data","auth","setState","error","errorMessage","signedIn","render","x","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,MAXc,GAWL,YAAY;AACnB,YAAMC,KAAK,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,wCAAuC,KAAKC,KAAL,CAAWC,QAAS,aAAY,KAAKD,KAAL,CAAWE,QAAS,EAAtG,CAApB;;AACA,UAAG,CAACJ,KAAK,CAACK,IAAN,CAAWC,IAAf,EAAqB;AACnB,aAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAE,IAAR;AAAcC,UAAAA,YAAY,EAAET,KAAK,CAACK,IAAN,CAAWC;AAAvC,SAAd;AAED,OALkB,CAQnB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD,KA5Ba;;AAEZ,SAAKJ,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXM,MAAAA,QAAQ,EAAE,KAHC;AAIXF,MAAAA,KAAK,EAAE,IAJI;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD;;AAqBDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKT,KAAL,CAAWQ,QAAZ,gBAAuB,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,CAACE,CAAD,EAAIC,CAAJ,KAAU;AAAC,aAAKN,QAAL,CAAc;AAAC,WAACK,CAAD,GAAKC;AAAN,SAAd;AAAwB,OAAvD;AAAyD,MAAA,SAAS,EAAE,MAAM,KAAKd,MAAL,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,gBAAoH,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvH,CADF;AAKD;;AArC+B;;AAwClC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport HomeScreen from './components/homeScreen';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      password: null,\n      signedIn: false,\n      error: null,\n      errorMessage: null\n    }\n  }\n\n  signIn = async () => {\n    const token = await axios.get(`http://localhost:7000/login?username=${this.state.username}&password=${this.state.password}`);\n    if(!token.data.auth) {\n      this.setState({error: true, errorMessage: token.data.auth});\n\n    }\n    \n    \n    // const validateToken = await axios.get('http://localhost:7000/validate', {\n    //   headers: {\n    //     'x-access-token': token.data.token\n    //   }\n    // });\n\n    // if(validateToken.status === 200) {\n    //   this.setState({signedIn: true});\n    // }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.signedIn ? <Login credentials={(x, y) => {this.setState({[x]: y})}} getSignIn={() => this.signIn()}/> : <HomeScreen/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}